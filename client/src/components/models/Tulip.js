/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';

export function VHappyTulip(props) {
    const { nodes, materials } = useGLTF('/models/tulip/vhappy.glb')
    return (
      <group {...props} dispose={null}>
        <mesh
          geometry={nodes.Right_Leaf.geometry}
          material={materials['stem and leaves']}
          position={[0, 3.775, -0.738]}
          rotation={[-0.26, 1.46, -1.798]}
          scale={[1.574, 1.574, 1.866]}
        />
        <mesh
          geometry={nodes.Stem.geometry}
          material={materials['stem and leaves']}
          position={[-0.77, 3.366, 0]}
          rotation={[0, 0, -Math.PI / 2]}
        />
        <mesh
          geometry={nodes.Mouth.geometry}
          material={materials['eyes and mouth']}
          position={[0.824, 5.54, -0.016]}
          rotation={[0, 0, -Math.PI / 2]}
          scale={0.145}
        />
        <mesh
          geometry={nodes.NurbsCurve.geometry}
          material={materials['eyes and mouth']}
          position={[0.716, 4.693, 0.351]}
          rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        />
        <mesh
          geometry={nodes.Left_Leaf.geometry}
          material={materials['stem and leaves.001']}
          position={[0, 2.495, 0.462]}
          rotation={[2.015, -Math.PI / 2, 0]}
          scale={[2.025, 2.025, 2.4]}
        />
        <mesh
          geometry={nodes.Cheeks.geometry}
          material={materials['cheeks.002']}
          position={[0.634, 5.427, 0.39]}
          rotation={[-0.079, -0.535, -0.165]}
          scale={0.786}
        />
        <mesh
          geometry={nodes.Petal_5.geometry}
          material={materials.petals}
          position={[-0.15, 5.741, -0.003]}
          rotation={[0, -0.893, -1.743]}
          scale={1.186}
        />
        <mesh
          geometry={nodes.Petal_1.geometry}
          material={materials.petals}
          position={[0.002, 5.833, 0.249]}
          rotation={[-3.119, 0.598, 1.542]}
          scale={1.167}
        />
        <mesh
          geometry={nodes.Petal_2.geometry}
          material={materials.petals}
          position={[-0.039, 5.824, 0.169]}
          rotation={[1.216, 1.527, -2.814]}
          scale={1.167}
        />
        <mesh
          geometry={nodes.Petal_6.geometry}
          material={materials.petals}
          position={[-0.121, 5.718, 0.181]}
          rotation={[-3.007, -1.082, 1.519]}
          scale={1.218}
        />
        <mesh
          geometry={nodes.Petal_3.geometry}
          material={materials.petals}
          position={[-0.103, 5.85, 0.021]}
          rotation={[-3.14, 0.926, 1.455]}
          scale={1.218}
        />
        <mesh
          geometry={nodes.Petal_4.geometry}
          material={materials.petals}
          position={[0.014, 5.859, 0.009]}
          rotation={[0.033, -0.037, -1.803]}
          scale={1.218}
        />
      </group>
    )
  }

export function HappyTulip(props) {
    const { nodes, materials } = useGLTF('/models/tulip/happy.glb')
    return (
      <group {...props} dispose={null}>
        <mesh
          geometry={nodes.Right_Leaf.geometry}
          material={materials['stem and leaves']}
          position={[0, 3.775, -0.738]}
          rotation={[-0.26, 1.46, -1.798]}
          scale={[1.574, 1.574, 1.866]}
        />
        <mesh
          geometry={nodes.Eyes.geometry}
          material={materials['eyes and mouth.001']}
          position={[0.697, 5.606, 0.314]}
          rotation={[0, -0.454, 0.027]}
          scale={[0.872, 0.885, 0.69]}
        />
        <mesh
          geometry={nodes.Mouth.geometry}
          material={materials['eyes and mouth']}
          position={[0.64, 5.415, -0.014]}
          rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        />
        <mesh
          geometry={nodes.Stem.geometry}
          material={materials['stem and leaves']}
          position={[-0.77, 3.366, 0]}
          rotation={[0, 0, -Math.PI / 2]}
        />
        <mesh
          geometry={nodes.Left_Leaf.geometry}
          material={materials['stem and leaves.001']}
          position={[0, 2.495, 0.462]}
          rotation={[2.015, -Math.PI / 2, 0]}
          scale={[2.025, 2.025, 2.4]}
        />
        <mesh
          geometry={nodes.Cheeks.geometry}
          material={materials['cheeks.002']}
          position={[0.634, 5.427, 0.39]}
          rotation={[-0.079, -0.535, -0.165]}
          scale={0.786}
        />
        <mesh
          geometry={nodes.Petal_5.geometry}
          material={materials.petals}
          position={[-0.15, 5.741, -0.003]}
          rotation={[0, -0.893, -1.743]}
          scale={1.186}
        />
        <mesh
          geometry={nodes.Petal_1.geometry}
          material={materials.petals}
          position={[0.002, 5.833, 0.249]}
          rotation={[-3.119, 0.598, 1.542]}
          scale={1.167}
        />
        <mesh
          geometry={nodes.Petal_2.geometry}
          material={materials.petals}
          position={[-0.039, 5.824, 0.169]}
          rotation={[1.216, 1.527, -2.814]}
          scale={1.167}
        />
        <mesh
          geometry={nodes.Petal_6.geometry}
          material={materials.petals}
          position={[-0.121, 5.718, 0.181]}
          rotation={[-3.007, -1.082, 1.519]}
          scale={1.218}
        />
        <mesh
          geometry={nodes.Petal_3.geometry}
          material={materials.petals}
          position={[-0.103, 5.85, 0.021]}
          rotation={[-3.14, 0.926, 1.455]}
          scale={1.218}
        />
        <mesh
          geometry={nodes.Petal_4.geometry}
          material={materials.petals}
          position={[0.014, 5.859, 0.009]}
          rotation={[0.033, -0.037, -1.803]}
          scale={1.218}
        />
      </group>
    )
  }

export function NeutralTulip(props) {
    const { nodes, materials } = useGLTF('/models/tulip/neutral.glb')
    return (
      <group {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Right_Leaf.geometry}
          material={materials['stem and leaves']}
          position={[0, 3.775, -0.738]}
          rotation={[-0.26, 1.46, -1.798]}
          scale={[1.574, 1.574, 1.866]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Eyes.geometry}
          material={materials['eyes and mouth.001']}
          position={[0.697, 5.606, 0.314]}
          rotation={[0, -0.454, 0.027]}
          scale={[0.872, 0.885, 0.69]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mouth.geometry}
          material={materials['eyes and mouth']}
          position={[0.64, 5.415, -0.014]}
          rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cheeks.geometry}
          material={materials['cheeks.001']}
          position={[0.634, 5.427, 0.39]}
          rotation={[-0.079, -0.535, -0.165]}
          scale={0.786}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Stem.geometry}
          material={materials['stem and leaves']}
          position={[-0.77, 3.366, 0]}
          rotation={[0, 0, -Math.PI / 2]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Left_Leaf.geometry}
          material={materials['stem and leaves.001']}
          position={[0, 2.495, 0.462]}
          rotation={[2.015, -Math.PI / 2, 0]}
          scale={[2.025, 2.025, 2.4]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_5.geometry}
          material={materials.petals}
          position={[-0.15, 5.741, -0.003]}
          rotation={[0, -0.893, -1.743]}
          scale={1.186}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_1.geometry}
          material={materials.petals}
          position={[0.002, 5.833, 0.249]}
          rotation={[-3.119, 0.598, 1.542]}
          scale={1.167}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_2.geometry}
          material={materials.petals}
          position={[-0.039, 5.824, 0.169]}
          rotation={[1.216, 1.527, -2.814]}
          scale={1.167}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_6.geometry}
          material={materials.petals}
          position={[-0.121, 5.718, 0.181]}
          rotation={[-3.007, -1.082, 1.519]}
          scale={1.218}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_3.geometry}
          material={materials.petals}
          position={[-0.103, 5.85, 0.021]}
          rotation={[-3.14, 0.926, 1.455]}
          scale={1.218}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_4.geometry}
          material={materials.petals}
          position={[0.014, 5.859, 0.009]}
          rotation={[0.033, -0.037, -1.803]}
          scale={1.218}
        />
      </group>
    )
  }

export function SadTulip(props) {
    const { nodes, materials } = useGLTF('/models/tulip/sad.glb')
    return (
      <group {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Right_Leaf.geometry}
          material={materials['stem and leaves']}
          position={[0, 3.775, -0.738]}
          rotation={[-0.26, 1.46, -1.798]}
          scale={[1.574, 1.574, 1.866]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Eyes.geometry}
          material={materials['eyes and mouth.001']}
          position={[0.697, 5.606, 0.314]}
          rotation={[0, -0.454, 0.027]}
          scale={[0.872, 0.885, 0.69]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Stem.geometry}
          material={materials['stem and leaves']}
          position={[-0.77, 3.366, 0]}
          rotation={[0, 0, -Math.PI / 2]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mouth.geometry}
          material={materials['eyes and mouth.002']}
          position={[0.969, 5.599, -0.014]}
          rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cheeks.geometry}
          material={materials['cheeks.002']}
          position={[0.634, 5.427, 0.39]}
          rotation={[-0.079, -0.535, -0.165]}
          scale={0.786}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Left_Leaf.geometry}
          material={materials['stem and leaves.001']}
          position={[0, 2.495, 0.462]}
          rotation={[2.015, -Math.PI / 2, 0]}
          scale={[2.025, 2.025, 2.4]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_5.geometry}
          material={materials.petals}
          position={[-0.15, 5.741, -0.003]}
          rotation={[0, -0.893, -1.743]}
          scale={1.186}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_1.geometry}
          material={materials.petals}
          position={[0.002, 5.833, 0.249]}
          rotation={[-3.119, 0.598, 1.542]}
          scale={1.167}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_2.geometry}
          material={materials.petals}
          position={[-0.039, 5.824, 0.169]}
          rotation={[1.216, 1.527, -2.814]}
          scale={1.167}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_6.geometry}
          material={materials.petals}
          position={[-0.121, 5.718, 0.181]}
          rotation={[-3.007, -1.082, 1.519]}
          scale={1.218}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_3.geometry}
          material={materials.petals}
          position={[-0.103, 5.85, 0.021]}
          rotation={[-3.14, 0.926, 1.455]}
          scale={1.218}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_4.geometry}
          material={materials.petals}
          position={[0.014, 5.859, 0.009]}
          rotation={[0.033, -0.037, -1.803]}
          scale={1.218}
        />
      </group>
    )
  }

  export function VSadTulip(props) {
    const { nodes, materials } = useGLTF('/models/tulip/vsad.glb')
    return (
      <group {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Left_Leaf.geometry}
          material={materials['stem and leaves']}
          position={[0, 2.495, 0.462]}
          rotation={[2.015, -Math.PI / 2, 0]}
          scale={[2.025, 2.025, 2.4]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Right_Leaf.geometry}
          material={materials['stem and leaves']}
          position={[0, 3.775, -0.738]}
          rotation={[-0.26, 1.46, -1.798]}
          scale={[1.574, 1.574, 1.866]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Stem.geometry}
          material={materials['stem and leaves']}
          position={[-0.77, 3.366, 0]}
          rotation={[0, 0, -Math.PI / 2]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mouth.geometry}
          material={materials['eyes and mouth.002']}
          position={[0.969, 5.599, -0.014]}
          rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Eyes.geometry}
          material={materials['eyes and mouth.003']}
          position={[0.716, 6.553, 0.351]}
          rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_5.geometry}
          material={materials.petals}
          position={[-0.15, 5.741, -0.003]}
          rotation={[0, -0.893, -1.743]}
          scale={1.186}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_1.geometry}
          material={materials.petals}
          position={[0.002, 5.833, 0.249]}
          rotation={[-3.119, 0.598, 1.542]}
          scale={1.167}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_2.geometry}
          material={materials.petals}
          position={[-0.039, 5.824, 0.169]}
          rotation={[1.216, 1.527, -2.814]}
          scale={1.167}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_6.geometry}
          material={materials.petals}
          position={[-0.121, 5.718, 0.181]}
          rotation={[-3.007, -1.082, 1.519]}
          scale={1.218}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_3.geometry}
          material={materials.petals}
          position={[-0.103, 5.85, 0.021]}
          rotation={[-3.14, 0.926, 1.455]}
          scale={1.218}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Petal_4.geometry}
          material={materials.petals}
          position={[0.014, 5.859, 0.009]}
          rotation={[0.033, -0.037, -1.803]}
          scale={1.218}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cheeks.geometry}
          material={materials['cheeks.002']}
          position={[0.634, 5.427, 0.39]}
          rotation={[-0.079, -0.535, -0.165]}
          scale={0.786}
        />
      </group>
    )
  }

useGLTF.preload('/models/tulip/vhappy.glb');
useGLTF.preload('/models/tulip/happy.glb');
useGLTF.preload('/models/tulip/neutral.glb');
useGLTF.preload('/models/tulip/sad.glb');
useGLTF.preload('/models/tulip/vsad.glb');
  